import { SignatureType } from "bls-eth-wasm";
import { PublicKey } from "./publicKey";
import { Signature as ISignature } from "../interface";
export declare class Signature implements ISignature {
    readonly value: SignatureType;
    constructor(value: SignatureType);
    static fromBytes(bytes: Uint8Array): Signature;
    static fromHex(hex: string): Signature;
    static aggregate(signatures: Signature[]): Signature;
    static verifyMultipleSignatures(publicKeys: PublicKey[], messages: Uint8Array[], signatures: Signature[]): boolean;
    verify(publicKey: PublicKey, message: Uint8Array): boolean;
    verifyAggregate(publicKeys: PublicKey[], message: Uint8Array): boolean;
    verifyMultiple(publicKeys: PublicKey[], messages: Uint8Array[]): boolean;
    toBytes(): Uint8Array;
    toHex(): string;
}
