"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.kdfParamsForPBKDF = exports.kdfParamsForScrypt = exports.runCipherBuffer = exports.KDFFunctions = exports.normalizePassword = void 0;
var KDFFunctions = {
  PBKDF: 'pbkdf2',
  Scrypt: 'scrypt'
};
exports.KDFFunctions = KDFFunctions;

var kdfParamsForPBKDF = function kdfParamsForPBKDF(opts) {
  return {
    dklen: opts.dklen,
    salt: opts.salt,
    c: opts.c,
    prf: 'hmac-sha256'
  };
};

exports.kdfParamsForPBKDF = kdfParamsForPBKDF;

var kdfParamsForScrypt = function kdfParamsForScrypt(opts) {
  return {
    dklen: opts.dklen,
    salt: opts.salt,
    n: opts.n,
    r: opts.r,
    p: opts.p
  };
};

exports.kdfParamsForScrypt = kdfParamsForScrypt;

var runCipherBuffer = function runCipherBuffer(cipher, data) {
  return Buffer.concat([cipher.update(data), cipher["final"]()]);
};

exports.runCipherBuffer = runCipherBuffer;

var escapeRegExp = function escapeRegExp(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
};

var normalizePassword = function normalizePassword(password) {
  password = password.normalize('NFKD');

  for (var i = 0x00; i < 0x20; i++) {
    password = password.replace(new RegExp(escapeRegExp(String.fromCharCode(i)), 'g'), '');
  }

  for (var _i = 0x7f; _i < 0xa0; _i++) {
    password = password.replace(new RegExp(escapeRegExp(String.fromCharCode(_i)), 'g'), '');
  }

  return password;
};

exports.normalizePassword = normalizePassword;